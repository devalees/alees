=== FOR IMPLEMENTATION ===
based on project rules and attached implementation steps file do the following:
## 2. Prerequisites

[ ] Verify `User` and `UserProfile` models are implemented and migrated.
[ ] **Install Libraries:** `pip install djangorestframework-simplejwt django-otp qrcode[pil] djangorestframework-api-key`.
[ ] Add `'rest_framework_simplejwt'`, `'django_otp'`, `'django_otp.plugins.otp_totp'`, and `'rest_framework_api_key'` to `INSTALLED_APPS`.
[ ] Add `'django_otp.middleware.OTPMiddleware'` to `MIDDLEWARE` (after `AuthenticationMiddleware`).
[ ] **Configure `simplejwt`:** Set up `SIMPLE_JWT` settings (token lifetimes, etc.) as previously defined.
[ ] **Configure `django-otp`:** Set `OTP_TOTP_ISSUER` as previously defined.
[ ] **Configure `djangorestframework-api-key`:** Specify the custom header name in `settings.py`.
    ```python
    # config/settings/base.py
    REST_FRAMEWORK_API_KEY = {
        'HEADER_NAME': 'HTTP_X_API_KEY', # DRF converts X-Api-Key header to this META key
        'CLIENT_ID_HEADER_NAME': None, # Not using Client ID header
    }
    ```
[ ] **Configure DRF Authentication Classes:** Update default authentication classes to include both JWT and API Key.
    ```python
    # config/settings/base.py
    REST_FRAMEWORK = {
        # ... other settings ...
        'DEFAULT_AUTHENTICATION_CLASSES': [
            'rest_framework_simplejwt.authentication.JWTAuthentication',
            'rest_framework_api_key.authentication.APIKeyAuthentication', # Add API Key Auth
        ],
        # ... other settings like DEFAULT_PERMISSION_CLASSES ...
    }
    ```
[ ] Create new Django app: `python manage.py startapp auth`. Add `'api.v1.auth'` to `INSTALLED_APPS`.
[ ] Ensure `factory-boy` and `UserFactory` exist.


with the following MUST follow rules:
- DON'T expand your work beyond this task
- MUST follow the attached document literally
- DON'T AFFECT OTHER IMPLEMENTATIONS
- Test coverage score at least 90%
- Follow Project Folder Structure
- Produce the latest state from time to time briefly 


Did you finished the following step:
  ### 3.2 Factory Definition (`tests/factories.py`)

  [ ] Define `OrganizationTypeFactory` in `api/v1/base_models/organization/tests/factories.py`:



=== FOR TEST ===
please run global pytest  to examine some failed tests
-focus on the failing tests
-fix one by one, then run the tests..
-keep running the tests until all tests are passed

- run the tests to verify that the actual implementation is passed

- please read this document carefully, and summarize what you got in maximum 10 points.
- Produce the latest state of organizationtype implementation briefly 
- please create postman collection with all environment settings included for all endpoints with examples templates here  
- please read the attached implementation steps carefully and asses the current state of this app compared to this documentation 


- MUST follow the attached document literally

- Please update the implementation steps file to reflect our latest progress 
- Please Git add & commit latest updates with proper description
- Create an API documentation file (api.md) with more detailed examples 

git reset --hard HEAD
git clean -fd






update the implementation steps file to reflect our progress

run npm test to verify that the actual implementation is passed

git reset --hard HEAD
git clean -fd
git commit --no-verify -m ""


please run global pytest  to examine some failed tests
-focus on the failing tests
-fix one by one, then run the tests..
-keep running the tests until all tests are passed






