=== FOR IMPLEMENTATION ===
based on project rules and attached implementation steps file do the following:
## 3. Implementation Steps (TDD Workflow)

  *(Models -> Single Primary Logic -> Factories -> Admin -> Migrations -> **Serializer (w/ Workaround)** -> API -> **Serializer Refactor (Later)**)*

  ### 3.1 Model Definitions (`models.py`)

  [ ] **(Test First - Contact & Channels)** Write Unit Tests verifying all models (`Contact`, `ContactEmailAddress`, `ContactPhoneNumber`, `ContactAddress`). Ensure `Contact.linked_organization` FK exists and is **nullable**.
  [ ] Define the `Contact` model *first* in `api/v1/base_models/contact/models.py`. Ensure `linked_organization` uses `null=True, blank=True`. Include `TaggableManager`.
  [ ] Define the communication channel models (`ContactEmailAddress`, `ContactPhoneNumber`, `ContactAddress`) *after* `Contact`. Ensure `ContactAddress` links correctly to `common.Address`.
  [ ] Run tests for all models; expect pass. Refactor.

  ### 3.2 Single Primary Logic (Model `save` override)

  [ ] **(Test First)** Write Integration Tests verifying single primary logic for Email, Phone, and Address models.
  [ ] Implement the `save()` override method on channel models.
  [ ] Run single primary logic tests; expect pass. Refactor.

 

with the following MUST follow rules:
- MUST follow the attached document literally
- DON'T expand your work beyond this task
- DON'T install dependencies directly, check the requirements directory first.
- DON'T AFFECT OTHER IMPLEMENTATIONS
- Test coverage score at least 90%
- Follow Project Folder Structure
- Produce the latest state from time to time briefly 


Did you finished the following step:
  ### 3.2 Factory Definition (`tests/factories.py`)

  [ ] Define `OrganizationTypeFactory` in `api/v1/base_models/organization/tests/factories.py`:



=== FOR TEST ===
please run docker-compose run --rm test to examine if any failed tests
-focus on the failing tests
-fix one by one, then run the tests..
-keep running the tests until all tests are passed
- run the tests to verify the implementation is passed

- run the tests to verify that the actual implementation is passed

- please read this document carefully, and summarize what you got in maximum 10 points.
- Produce the latest state of organizationtype implementation briefly 
- please create postman collection with all environment settings included for all endpoints with examples templates here  
- please read the attached implementation steps carefully and asses the current state of this app compared to this documentation 


- MUST follow the attached document literally

- Please update the implementation steps file to reflect our latest progress 
- Please Git add & commit latest updates with proper description
- please Create an API documentation file (api.md) for all endpoints with detailed examples 

git reset --hard HEAD
git clean -fd






update the implementation steps file to reflect our progress

run npm test to verify that the actual implementation is passed

git reset --hard HEAD
git clean -fd
git commit --no-verify -m ""


please run global pytest  to examine some failed tests
-focus on the failing tests
-fix one by one, then run the tests..
-keep running the tests until all tests are passed





  [ ] Run setup/verification API tests; expect pass. Refactor views.



