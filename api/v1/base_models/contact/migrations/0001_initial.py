# Generated by Django 4.2.20 on 2025-04-30 23:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
        ("address", "0004_alter_address_created_by_alter_address_updated_by"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="First Name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="Last Name",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, verbose_name="Title"),
                ),
                (
                    "organization_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Organization Name"
                    ),
                ),
                (
                    "organization_id",
                    models.IntegerField(
                        blank=True,
                        help_text="Temporary field to store organization ID until Organization model is implemented",
                        null=True,
                        verbose_name="Organization ID",
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("primary", "Primary"),
                            ("billing", "Billing"),
                            ("support", "Support"),
                            ("technical", "Technical"),
                            ("other", "Other"),
                        ],
                        default="primary",
                        max_length=20,
                        verbose_name="Contact Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("do_not_contact", "Do Not Contact"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("website", "Website"),
                            ("referral", "Referral"),
                            ("conference", "Conference"),
                            ("other", "Other"),
                        ],
                        default="website",
                        max_length=20,
                        verbose_name="Source",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Custom Fields"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="TaggedContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contact.contact",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("billing", "Billing"),
                            ("shipping", "Shipping"),
                            ("other", "Other"),
                        ],
                        default="home",
                        max_length=20,
                        verbose_name="Address Type",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Is Primary"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_addresses",
                        to="address.address",
                        verbose_name="Address",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="contact.contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Address",
                "verbose_name_plural": "Contact Addresses",
                "ordering": ["-is_primary", "address_type"],
            },
        ),
        migrations.AddField(
            model_name="contact",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="contact.TaggedContact",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated the record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Updated by",
            ),
        ),
        migrations.CreateModel(
            name="ContactPhoneNumber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="Phone Number"),
                ),
                (
                    "phone_type",
                    models.CharField(
                        choices=[
                            ("mobile", "Mobile"),
                            ("work", "Work"),
                            ("home", "Home"),
                            ("fax", "Fax"),
                            ("other", "Other"),
                        ],
                        default="mobile",
                        max_length=20,
                        verbose_name="Phone Type",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Is Primary"),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phone_numbers",
                        to="contact.contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Phone Number",
                "verbose_name_plural": "Contact Phone Numbers",
                "ordering": ["-is_primary", "phone_type", "phone_number"],
                "unique_together": {("contact", "phone_number")},
            },
        ),
        migrations.CreateModel(
            name="ContactEmailAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email Address"),
                ),
                (
                    "email_type",
                    models.CharField(
                        choices=[
                            ("primary", "Primary"),
                            ("work", "Work"),
                            ("personal", "Personal"),
                            ("other", "Other"),
                        ],
                        default="primary",
                        max_length=20,
                        verbose_name="Email Type",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="Is Primary"),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_addresses",
                        to="contact.contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Email Address",
                "verbose_name_plural": "Contact Email Addresses",
                "ordering": ["-is_primary", "email_type", "email"],
                "unique_together": {("contact", "email")},
            },
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["last_name", "first_name"],
                name="contact_con_last_na_95a906_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["organization_name"], name="contact_con_organiz_c88c96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(
                fields=["contact_type"], name="contact_con_contact_839b6a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contact",
            index=models.Index(fields=["status"], name="contact_con_status_9a9384_idx"),
        ),
    ]
