# Generated by Django 4.2.20 on 2025-05-01 05:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):
    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
        ("address", "0004_alter_address_created_by_alter_address_updated_by"),
        ("contact", "0003_alter_contactaddress_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "api_v1_currency",
            "0002_alter_currency_created_at_alter_currency_created_by_and_more",
        ),
        ("api_v1_organization", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The display name of the organization", max_length=255
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique identifier/code for the organization",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        help_text="Current status of the organization",
                        max_length=20,
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        help_text="Date the organization becomes active",
                        null=True,
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Date the organization ceases to be active",
                        null=True,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC",
                        help_text="Default timezone for the organization",
                        max_length=50,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en",
                        help_text="Default language preference",
                        max_length=10,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata for the organization",
                    ),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Custom fields for the organization",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        help_text="Default operating currency",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api_v1_currency.currency",
                    ),
                ),
                (
                    "organization_type",
                    models.ForeignKey(
                        help_text="The type of organization",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api_v1_organization.organizationtype",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        help_text="Parent organization in the hierarchy",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="api_v1_organization.organization",
                    ),
                ),
                (
                    "primary_address",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary address for the organization",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_for_organizations",
                        to="address.address",
                    ),
                ),
                (
                    "primary_contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary contact person for the organization",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_for_organizations",
                        to="contact.contact",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="api_v1_orga_name_8ebb11_idx"),
                    models.Index(
                        fields=["status"], name="api_v1_orga_status_255b9b_idx"
                    ),
                    models.Index(fields=["code"], name="api_v1_orga_code_147d61_idx"),
                    models.Index(
                        fields=["organization_type"],
                        name="api_v1_orga_organiz_5ade16_idx",
                    ),
                ],
            },
        ),
    ]
